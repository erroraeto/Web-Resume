// Setting:
$steps: 20;
%text-color {
  -webkit-background-clip: text;
	background-clip: text;
  color: transparent;
  position: relative;
  background-image:
    repeating-linear-gradient(
      -90deg,
      transparent,
      transparent 1px,
      rgba(63, 108, 125, 0.15) 1.5px,
      rgba(63, 108, 125, 0.15) 1.6px,
      transparent 2.1px,
      transparent 3.1px
    ),
    repeating-linear-gradient(
      transparent 0.15px,
      #8ee6ff 0.5px,
      #8ee6ff 1px,
      transparent 1.4px
    );
}


.txt-hover {
  @extend %text-color;
  display: inline-flex;
  position: relative;
  padding: 0;
  margin: 0;

  filter:
    drop-shadow(0px 0px 1px #6eb0ca)
    blur(0.15px);
}

.txt-hover:hover {
  @extend %text-color;
  background-image:
    repeating-linear-gradient(
      -90deg,
      transparent,
      transparent 1px,
      rgba(63, 108, 125, 0.15) 1.5px,
      rgba(63, 108, 125, 0.15) 1.6px,
      transparent 2.1px,
      transparent 3.1px
    ),
    repeating-linear-gradient(
      transparent 0.15px,
      #fff 0.5px,
      #fff 1px,
      transparent 1.4px
    );
  filter:
    drop-shadow(0px 0px 3px #89e5ff)
    blur(0.15px);

  text-shadow: 0 0 1px #fff;
  position: relative;
  
  &::before {
    content: attr(data-text);
    @extend %text-color;
    position: absolute;
    overflow: hidden;
    z-index: -1;
    right: 0;
    left: 0;
    top: 0;

    clip: rect(0.5em, 9999px, 0.5em, 0);
    text-shadow: initial;

    transform:
        translateX(0)
        scaleX(0)
        skewX(0);
    opacity: 75%;

    animation: glitch-effect 1s infinite linear alternate-reverse;
  }

  &::after {
    content: attr(data-text);
    @extend %text-color;
    position: absolute;
    right: 0;
    left: 0;
    top: 0; 

    clip: rect(0, 9999px, 0, 0);
    overflow: hidden;
    transform: 
      translateX(0)
      scaleX(0)
      skewX(0);

    animation: glitch-effect-1 1s infinite linear alternate-reverse;
  }
}

@keyframes glitch-effect{
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip: rect(random() + 0.2 + em, 9999px, random() + 0.2 + em, 0);
      transform: 
        skewX((random(50) - 25) + deg)
        translateX((random(20) - 10) + px);
    }
  }
}

@keyframes glitch-effect-1{
  @for $i from 0 through $steps{
      #{percentage($i*(1/$steps))}{
        clip: rect(random() + 0.2 + em, 9999px, random() + 0.2 + em, 0);
        transform: 
          skewX((random() - 0.5) + deg)
          translateX((random() - 0.5) + px);
      }
  }
}